name: Deploy to Production

on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Cloner le dépôt
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      # 2. Configurer Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      # 3. Mise à jour de la version
      - name: Update version
        run: |
          VERSION=$(cat public/version.txt)
          echo "APP_VERSION=$VERSION" >> $GITHUB_ENV

      # 4. Installer les dépendances
      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      # 5. Construire l'application
      - name: Build application
        env:
          NUXT_PUBLIC_VERSION: ${{ env.APP_VERSION }}
        run: npm run generate

      # 6. Créer un répertoire temporaire sur le serveur FTP
      - name: Create temp-deploy directory
        run: |
          lftp -u ${{ secrets.FTP_USERNAME }},${{ secrets.FTP_PASSWORD }} -e "set ssl:verify-certificate no; mkdir /temp-deploy; quit" ftp://${{ secrets.FTP_SERVER }}

      # 7. Déployer vers le répertoire temporaire
      - name: Deploy to temporary directory on server
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./.output/public/
          server-dir: /temp-deploy/
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
          log-level: minimal

      # 8. Basculer les fichiers en production
      - name: Switch directories via FTP
        run: |
          lftp -u ${{ secrets.FTP_USERNAME }},${{ secrets.FTP_PASSWORD }} -e "set ssl:verify-certificate no; mv /temp-deploy/* /; rmdir /temp-deploy; quit" ftp://${{ secrets.FTP_SERVER }}

      # 9. Supprimer le répertoire temporaire si nécessaire
      - name: Clean up temporary directory
        run: |
          lftp -u ${{ secrets.FTP_USERNAME }},${{ secrets.FTP_PASSWORD }} -e "set ssl:verify-certificate no; rmdir /temp-deploy; quit" ftp://${{ secrets.FTP_SERVER }}

      # 10. Message de fin de déploiement
      - name: Deployment completion message
        run: |
          echo "Deployment completed successfully!"
          echo "Version $(cat public/version.txt) has been deployed."
