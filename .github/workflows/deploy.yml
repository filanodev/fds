name: Deploy to Production

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout du code
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      # 2. Configuration de Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      # 3. Mise à jour de la version
      - name: Update version
        run: |
          VERSION=$(cat public/version.txt)
          echo "APP_VERSION=$VERSION" >> $GITHUB_ENV
          echo "DEPLOY_ID=$(date +%Y%m%d_%H%M%S)" >> $GITHUB_ENV

      # 4. Installation des dépendances
      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      # 5. Build de l'application
      - name: Build application
        env:
          NUXT_PUBLIC_VERSION: ${{ env.APP_VERSION }}
        run: npm run generate

      # 6. Préparation des fichiers
      - name: Prepare deployment package
        run: |
          mkdir -p deploy
          mkdir -p deploy/site
          cp -r .output/public/* deploy/site/
          
          echo "<IfModule mod_rewrite.c>
          RewriteEngine On
          RewriteBase /
          RewriteCond %{REQUEST_FILENAME} -f [OR]
          RewriteCond %{REQUEST_FILENAME} -d
          RewriteRule ^ - [L]
          RewriteRule ^(.*)$ /current/$1 [L]
          </IfModule>" > deploy/.htaccess
          
          echo "<?php
          // Script de bascule
          \$deployId = '${{ env.DEPLOY_ID }}';
          \$releasesDir = __DIR__ . '/releases';
          \$currentLink = __DIR__ . '/current';
          \$newRelease = \$releasesDir . '/' . \$deployId;

          if (!is_dir(\$releasesDir)) mkdir(\$releasesDir, 0755, true);
          if (!is_dir(\$newRelease)) mkdir(\$newRelease, 0755, true);

          // Copier les fichiers dans le nouveau dossier
          \$siteDir = __DIR__ . '/site';
          shell_exec(\"cp -r \$siteDir/* \$newRelease/\");

          // Mettre à jour le lien symbolique
          if (is_link(\$currentLink)) unlink(\$currentLink);
          symlink(\$newRelease, \$currentLink);

          echo 'Deployment successful!';
          ?>" > deploy/switch.php

      # 7. Déploiement des fichiers
      - name: Deploy all files
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./deploy/
          server-dir: /
          log-level: minimal

      # 8. Instructions pour terminer la bascule
      - name: Notify about deployment switch
        run: |
          echo "Visit 'https://filano.dev/switch.php' to complete the deployment."
          echo "Current version: ${{ env.APP_VERSION }}"
